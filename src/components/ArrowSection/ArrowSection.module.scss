.arrow {
  display: flex;
}

.filledArrow,
.emptyArrow:hover,
.emptyArrow:focus-within {
  button {
    opacity: 1;
    pointer-events: auto;
  }
}

.arrow button {
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.15s ease-in-out;
  border-radius: 0;
  border: none;
  background-color: transparent;
  padding: 0;

  &:focus {
    outline: 0;
  }
}

.arrowSection {
  filter: drop-shadow(0 4px 4px rgba(0, 0, 0, 0.25));
  height: 100%;
  transition: transform 0.2s ease-out;
  width: 100%;
  will-change: transform;
}

$end-offset: 6px;

.pointUp,
.pointDown {
  flex-direction: column;
}

.pointLeft {
  /*
    TODO: Fix translate if the size of the grid or arrows changes. 
    The arrows should be placed in the center of the gridindicators 
    and should not overlap boxes.
  */
  transform: rotate(180deg) translateX($end-offset);
}

.pointUp {
  /*
    TODO: Fix translate if the size of the grid or arrows changes. 
    The arrows should be placed in the center of the gridindicators 
    and should not overlap boxes.
  */
  transform: rotate(180deg) translateY($end-offset);
}

.pointDown {
  /*
    TODO: Fix translate if the size of the grid or arrows changes. 
    The arrows should be placed in the center of the gridindicators 
    and should not overlap boxes.
  */
  transform: rotate(0deg) translateY(-$end-offset);
}

.pointRight {
  /*
    TODO: Fix translate if the size of the grid or arrows changes. 
    The arrows should be placed in the center of the gridindicators 
    and should not overlap boxes.
  */
  transform: rotate(0deg) translateX(-$end-offset);
}
